//! This module re-export the native C functions used in this wrapper.
//!
//! The bindings are automatically generated by
//! [bindgen](https://github.com/rust-lang/rust-bindgen) and this module only
//! re export the ones needed by this crate. You can find the complete wrapper
//! on the [`crate::h5sys::sys`] crate.

pub mod sys {
    #![allow(unused)]
    #![allow(non_upper_case_globals)]
    #![allow(non_camel_case_types)]
    #![allow(non_snake_case)]
    #![allow(clippy::upper_case_acronyms)]
    include!(concat!(env!("OUT_DIR"), "/bindings.rs"));
}

pub use std::ffi::{c_char, c_void, CStr, CString};
pub use std::ptr::{null, null_mut};

pub mod lib {
    pub use super::sys::{
        H5atclose, H5close, H5get_libversion, H5is_library_threadsafe, H5open,
    };
}

pub mod types {
    pub type Hid = i64;
    pub use super::sys::{
        H5_index_t_H5_INDEX_NAME, H5_iter_order_t_H5_ITER_INC,
    };
}

pub mod attribute {
    pub use super::sys::{
        H5A_info_t, H5Aclose, H5Aget_space, H5Aget_type, H5Aiterate2, H5Aopen,
        H5Aread,
    };
}

pub mod dataset {
    pub use super::sys::{
        H5Dclose, H5Dcreate2, H5Dflush, H5Dget_create_plist, H5Dget_space,
        H5Dget_type, H5Dopen2, H5Dread, H5Dwrite,
    };
}

pub mod file {
    pub const H5F_ACC_RDONLY: u32 = 0;
    pub const H5F_ACC_RDWR: u32 = 1;
    pub const H5F_ACC_TRUNC: u32 = 2;

    pub use super::sys::{H5Fclose, H5Fcreate, H5Fis_accessible, H5Fopen};
}

pub mod group {
    pub use super::sys::{H5Gclose, H5Gcreate2, H5Gopen2};
}

pub mod identifier {
    pub use super::sys::{
        H5I_type_t_H5I_ATTR, H5I_type_t_H5I_BADID, H5I_type_t_H5I_DATASET,
        H5I_type_t_H5I_DATASPACE, H5I_type_t_H5I_DATATYPE,
        H5I_type_t_H5I_ERROR_CLASS, H5I_type_t_H5I_ERROR_MSG,
        H5I_type_t_H5I_ERROR_STACK, H5I_type_t_H5I_EVENTSET,
        H5I_type_t_H5I_FILE, H5I_type_t_H5I_GENPROP_CLS,
        H5I_type_t_H5I_GENPROP_LST, H5I_type_t_H5I_GROUP, H5I_type_t_H5I_MAP,
        H5I_type_t_H5I_SPACE_SEL_ITER, H5I_type_t_H5I_UNINIT,
        H5I_type_t_H5I_VFL, H5I_type_t_H5I_VOL, H5Idec_ref, H5Iget_name,
        H5Iget_ref, H5Iinc_ref, H5Iis_valid, H5I_INVALID_HID,
    };
}

pub mod link {
    pub use super::sys::{
        H5L_info2_t, H5Ldelete, H5Lexists, H5Literate2, H5O_info2_t,
        H5O_token_t, H5O_type_t, H5Oget_info3, H5Oopen,
    };
}

pub mod plist {
    pub const H5P_DEFAULT: i64 = super::sys::H5P_DEFAULT as i64;

    pub use super::sys::{
        H5P_CLS_DATASET_ACCESS_ID_g, H5P_CLS_DATASET_CREATE_ID_g,
        H5P_CLS_DATASET_XFER_ID_g, H5P_CLS_FILE_ACCESS_ID_g,
        H5P_CLS_FILE_CREATE_ID_g, H5Pclose, H5Pcopy, H5Pcreate, H5Pequal,
        H5Pget_chunk, H5Pget_class, H5Pget_class_name, H5Pset_filter,
    };
}

pub mod dataspace {
    pub const H5S_ALL: i64 = super::sys::H5S_ALL as i64;
    pub const H5S_SELECT_SET: i32 = super::sys::H5S_seloper_t_H5S_SELECT_SET;
    pub use super::sys::{
        H5S_class_t_H5S_SCALAR, H5S_seloper_t_H5S_SELECT_SET, H5Sclose,
        H5Screate, H5Screate_simple, H5Sget_simple_extent_dims,
        H5Sget_simple_extent_ndims, H5Sselect_all, H5Sselect_hyperslab,
    };
}

pub mod datatype {
    pub use super::sys::{
        H5T_C_S1_g, H5T_NATIVE_FLOAT_g, H5T_NATIVE_INT_g, H5T_NATIVE_LLONG_g,
        H5T_NATIVE_ULLONG_g, H5T_class_t_H5T_COMPOUND, H5T_class_t_H5T_FLOAT,
        H5T_class_t_H5T_INTEGER, H5T_class_t_H5T_STRING,
        H5T_cset_t_H5T_CSET_ASCII, H5T_sign_t_H5T_SGN_2,
        H5T_sign_t_H5T_SGN_NONE, H5T_str_t_H5T_STR_NULLPAD,
        H5T_str_t_H5T_STR_NULLTERM, H5Tclose, H5Tcopy, H5Tcreate, H5Tget_class,
        H5Tget_cset, H5Tget_sign, H5Tget_size, H5Tget_strpad, H5Tinsert,
        H5Tis_variable_str, H5Tset_cset, H5Tset_size, H5Tset_strpad,
    };
}

pub mod filter {
    pub use super::sys::{
        H5Z_class2_t, H5Zregister, H5Zunregister, H5Z_CLASS_T_VERS,
    };
}
